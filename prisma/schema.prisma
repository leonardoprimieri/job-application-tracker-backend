// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String           @id @default(uuid())
  firstName       String?
  lastName        String?
  email           String?          @unique
  passwordHash    String?          @map("password_hash")
  avatarUrl       String?          @map("avatar_url")
  createdAt       DateTime         @default(now()) @map("created_at")
  updatedAt       DateTime         @updatedAt @map("updated_at")
  tokens          Token[]
  accounts        Account[]
  jobApplications JobApplication[]

  @@map("users")
}

enum TokenType {
  PASSWORD_RECOVER
}

model Token {
  id        String    @id @default(uuid())
  type      TokenType
  createdAt DateTime  @default(now()) @map("created_at")

  user   User   @relation(fields: [userId], references: [id])
  userId String @map("user_id")

  @@map("tokens")
}

enum AccountProvider {
  GITHUB
}

model Account {
  id                String          @id @default(uuid())
  provider          AccountProvider
  providerAccountId String          @unique @map("provider_account_id")

  user   User   @relation(fields: [userId], references: [id])
  userId String

  @@unique([provider, userId])
  @@map("accounts")
}

model JobApplication {
  id          String            @id @default(uuid())
  companyName String            @map("company_name")
  title       String            @map("job_title")
  url         String?           @map("job_url")
  status      ApplicationStatus @default(APPLIED)
  appliedDate DateTime?         @map("applied_date")
  notes       String?
  salaryRange String?           @map("salary_range")
  createdAt   DateTime          @default(now()) @map("created_at")
  updatedAt   DateTime          @updatedAt @map("updated_at")

  user   User   @relation(fields: [userId], references: [id])
  userId String @map("user_id")

  @@map("job_applications")
}

enum ApplicationStatus {
  SAVED
  APPLIED
  INTERVIEW
  OFFER
  REJECTED
  ACCEPTED
  DECLINED
}
